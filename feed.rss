<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>kasprzykmichal.com</title><description>My site</description><link>https://kasprzykmichal.com</link><language>en</language><lastBuildDate>Mon, 29 Jun 2020 22:56:21 +0200</lastBuildDate><pubDate>Mon, 29 Jun 2020 22:56:21 +0200</pubDate><ttl>250</ttl><atom:link href="https://kasprzykmichal.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://kasprzykmichal.com/posts/2020/06/29/wwdc20-summary</guid><title>WWDC20 Summary</title><description>The WWDC conference week is over, and today we learned who won Apple Design Awards. Now it's time for us, developers, to dive in and learn newly released frameworks, fix all related issues, and prepare our apps for the public releases of new operating systems. Before that, I decided to do a small summary with my perspective on what happened during the week.</description><link>https://kasprzykmichal.com/posts/2020/06/29/wwdc20-summary</link><pubDate>Mon, 29 Jun 2020 23:00:00 +0200</pubDate><content:encoded><![CDATA[<p>The WWDC conference week is over, and today we learned who won Apple Design Awards. Now it's time for us, developers, to dive in and learn newly released frameworks, fix all related issues, and prepare our apps for the public releases of new operating systems. Before that, I decided to do a small summary with my perspective on what happened during the week.</p><h2>Conference</h2><p>I was curious how this year, an entirely online event will look like compared to onsite one. I need to say I like how it went. <a href="https://developer.apple.com/videos/play/wwdc2020/101/">Keynote</a> and <a href="https://developer.apple.com/videos/play/wwdc2020/102/">Platforms State of the Union</a> were pretty fun to watch, especially with all the shots of Apple Park. All the talks were prerecorded with exceptional quality, released daily. Format of the videos was great, instead of sticking to specific presentation time-slots, we got talks that are as long as needed. Excellent addition to everything was recap videos, with a short glance on what was discussed during the day and what we can expect tomorrow.</p><h2>Labs</h2><p>During the conference week, I spend most of my time around labs. I had a plan and list of issues I wanted to discuss with Apple engineers and tried to put as much time as I can into it. The application process was pretty easy, selecting a specific lab and filling up the form with some necessary information about the topic you want to discuss. I've been lucky because all of my applications were selected, and I was able to spend some time solving my bugs with engineers responsible for building the frameworks I'm using. All folks were super helpful, trying to understand the problem and work out some solutions. There was no time constraint, during one lab, I had more than 1 hour long debugging session with the engineer from Apple. Comparing this year's format to the onsite WWDC, I was missing a few things: group open conversations and the possibility to spend the whole day at the lab zone and chat with Apple engineers whenever they are free.</p><h2>My favorites</h2><p>From the user point of view, I like the new design of macOS Big Sur, it brings some freshness to the system and tries to unify and clean up design language for the platform. I'm also excited about Mac transition to Apple Silicon. This move will open many new possibilities in terms of processing power, battery life, and optimizations explicitly made for macOS. Apple is known for software and hardware integration, and I think that this transition is a step in the right direction. Finally, we will have Picture-in-Picture on iOS and tvOS, a feature I had on my wishlist for quite some time. As a developer, one of the things I'm delighted to see is SwiftUI improvements. Apple started using SwiftUI in some system-level components like the new control center on macOS, which means that it is ready to be used on production. Some of the released features, like Widgets, can be built exclusively in SwiftUI, which will push more developers to use this framework. I liked everything about Widgets and App Clips, and I'm sure I will be exploring more of that soon. It also means that Apple is pushing us, developers, to think differently about how we are building our apps.</p><h2>What to watch</h2><p>As I mentioned before, I didn't have a lot of time during the week to keep up with all the sessions. Right now, I'm trying to catch up with all the new stuff, but I can recommend a few videos I already watched:</p><ol><li><a href="https://developer.apple.com/videos/play/wwdc2020/10041/"><strong>What's new in SwiftUI</strong></a> - A glance at everything new in SwiftUI. I think this session is great if you want to see all the things added this year and get the references to sessions that will dive into more specific topics.</li></ol><ol start="2"><li><a href="https://developer.apple.com/videos/play/wwdc2020/10097/"><strong>Advances in UICollectionView</strong></a> - Apple introduced some new features for UICollectionViews, and this talk will walk you thru all of them. I highly recommend this session to everyone who is relying heavily on UITableView.</li></ol><ol start="3"><li><a href="https://developer.apple.com/videos/play/wwdc2020/10040/"><strong>Data Essentials in SwiftUI</strong></a> - There are a lot of discussions about how to structure your data when you are using SwiftUI. This session should make it a bit more clear on how Apple recommends to do it.</li></ol><h2>Summary</h2><p>Time for a small recap, I enjoyed the conference this year, and I'm ready to dive in and build some things with all the stuff released this year. Of course, Apple can make some improvements to the online format of the WWDC. First, we need to see if Apple will stick to the online version of the conference next year or onsite venue will be back. I would like to see a mix of both.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://kasprzykmichal.com/posts/2020/06/21/wwdc20</guid><title>WWDC20</title><description>We are less than 24 hours from the keynote opening WWDC20, and as the first post on my new website, I decided to share my thoughts on the topic. This year, because of the current state of the world, the conference is online, which is a considerable change. I was in San Jose in 2018, and I'm curious to see and compare this year's event to an onsite one.</description><link>https://kasprzykmichal.com/posts/2020/06/21/wwdc20</link><pubDate>Sun, 21 Jun 2020 19:00:00 +0200</pubDate><content:encoded><![CDATA[<p>We are less than 24 hours from the keynote opening WWDC20, and as the first post on my new website, I decided to share my thoughts on the topic. This year, because of the current state of the world, the conference is online, which is a considerable change. I was in San Jose in 2018, and I'm curious to see and compare this year's event to an onsite one.</p><h2>Labs</h2><p>This year, every developer will be able to sign up and talk to Apple engineers. I have a few topics I would like to discuss, and I hope that I will be able to do it. Labs are limited, and I assume that only some questions will be selected. Remember to research it before, try new Apple Developer Forums and see if you can find your answer there first. The most important thing to do before your lab is to prepare everything. Make sure you have your topic ready and have some sample projects where you can show everything you would like to achieve or a bug you are trying to solve. Labs are an essential part of the whole conference, so spend your time with Apple engineers entirely.</p><h2>Wishlist</h2><p>Almost every post about WWDC20 must include a wishlist of new features we would like to see in new system releases. I'm super excited to see everything that Apple will show, but for me, the most significant improvements and enhancements for current ones.</p><h3>Releasing internal components</h3><p>I want to use some of the current internal components that Apple have in their apps, such as Maps, Health, or Activity. Right now, if you want to have some modern UI interface with some fancy sheet UI or pretty looking charts, you need to spend hours trying to reimplement it yourself. Besides UI components, there are some other internal elements that I would love to see as a part of the official SDKs. (write which ones)</p><h3>Buddybuild acquisition outcome</h3><p>Apple bought Buddybuild in 2018, and we are still waiting to see what team behind one of the best Continous Integration and Deployment service can do at Apple. I hope that we will be able to see what they've been working on. We already saw the redesign of the App Store Connect web interface, so maybe it is a small hint that something in this field is on the way. We need the first-party solution that will also include things like proper crash reporting or analytics.</p><h3>Expanding platform-specific features or apps</h3><p>There are some of the features which are available on one platform I would like to see on other ones. One of them is picture-in-picture. It would be nice to have it on iOS (not only iPadOS). Expanding HealthKit to iPadOS and macOS would be great, same with the Health app. Bringing Shortcuts to macOS would also open a lot of new possibilities for users and developers.</p><h3>Documentation</h3><p>Last point on my list, but I would say that this one is the most important. We all know that documentation we get for all new stuff is not perfect. Apple needs to give us developers, proper documentation so we can spend more time building new features or adding newly releaded stuff to our apps and not on trying to figure out how some undocumented parts of the SDK work. It would be great if Apple provides something like SwiftUI tutorials for newly released software and fix that for currently undocumented parts of the SDKs.</p><p>My wishlist has only a few points, and I would be happy to see that at least one of them happens tomorrow.</p><h2>One more thing</h2><p>Recently, there are a lot of rumors about Apple moving from Intel chips to ARM ones. Some well-informed journalists are pointing that the announcement will happen at this year's WWDC. I'm curious how they will approach it and how this whole developer transition will look like.</p><p>I hope that you enjoyed my first post and if you have any comments or feedback, feel free to ping me on <a href="https://twitter.com/kasprzyk_michal">Twitter</a>.</p>]]></content:encoded></item></channel></rss>